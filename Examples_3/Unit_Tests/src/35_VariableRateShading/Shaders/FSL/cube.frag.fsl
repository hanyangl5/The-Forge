/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "shaderDefs.h.fsl"

STRUCT(PsIn)
{
    DATA(float4, position,  SV_POSITION);
    DATA(float4, Color,     COLOR);
    DATA(float2, TexCoords, TEXCOORD0);
};

RES(SamplerState,  uSampler,  UPDATE_FREQ_NONE, s1, binding = 0);
RES(Tex2D(float4), uTexture1, UPDATE_FREQ_NONE, t2, binding = 2);

float4 PS_MAIN(PsIn In, SV_SampleIndex(uint) i)
{
    INIT_MAIN;
    float4 color;

    float2 uv_dx = 0.5 * ddx( In.TexCoords );
    float2 uv_dy = 0.5 * ddy( In.TexCoords );

    float2 texCoords = In.TexCoords + uvOffsets[i].x * uv_dx + uvOffsets[i].y * uv_dy;
    texCoords = clamp(texCoords, float2(0.0, 0.0), float2(0.9999, 0.9999));

    color = SampleTex2D(Get(uTexture1), Get(uSampler), texCoords) * In.Color;   
    RETURN(color);
}