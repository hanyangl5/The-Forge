/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "shaderDefs.h.fsl"

PUSH_CONSTANT(cbRootConstant, b0)
{
    DATA(float, toggleDebugView, None);
};

STRUCT(PsIn)
{
	    DATA(float4, position,    SV_POSITION);
};

RES(SamplerState,  uSampler, UPDATE_FREQ_NONE, s1, binding = 0);
RES(Tex2D(float4), uTexture, UPDATE_FREQ_NONE, t1, binding = 1);
RES(Tex2DMS(uint, SAMPLE_COUNT), uTextureDebug, UPDATE_FREQ_NONE, t3, binding = 3);

float4 PS_MAIN( PsIn In )
{
    INIT_MAIN;
    float4 color;

    uint2 texCoords = uint2(In.position.xy);

    color = LoadTex2D(Get(uTexture), Get(uSampler), texCoords, 0);
    if (Get(toggleDebugView) == 0.0)
    {
        RETURN(color);
    }
    uint rate = GetConservativeRate(LoadTex2DMS(Get(uTextureDebug), NO_SAMPLER, texCoords/uint2(2,2), 0).r);

    if (rate == SHADING_RATE_1X2)
    {
        color.rgb = float3(1.0, 0.0, 0.0);
        RETURN(color);
    }
    if (rate == SHADING_RATE_2X1)
    {
        color.rgb = float3(0.0, 0.0, 1.0);
        RETURN(color);
    }
    if (rate == SHADING_RATE_2X2)
    {
        color.rgb = float3(1.0, 1.0, 1.0);
        RETURN(color);
    }

    color.rgb = float3(0.0, 1.0, 0.0);
    RETURN(color);
}
