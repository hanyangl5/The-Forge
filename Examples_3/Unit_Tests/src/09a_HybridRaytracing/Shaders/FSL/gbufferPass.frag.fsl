/*
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "gbuffer_resources.h.fsl"

STRUCT(PsIn)
{    
    DATA(float3, normal, TEXCOORD0);
	DATA(float3, pos, TEXCOORD1);
	DATA(float2, uv, TEXCOORD2);
};

STRUCT(PSOut)
{
    DATA(float4, albedo, SV_Target0);
    DATA(float4, normal, SV_Target1);
};


PSOut PS_MAIN( PsIn In )
{	
	INIT_MAIN;
	PSOut Out;

	//load albedo
#if !defined(TARGET_IOS)
	float3 albedo = SampleTex2D(Get(textureMaps)[Get(albedoMap)], Get(samplerLinear), In.uv).rgb;
#else
	float3 albedo = SampleTex2D(Get(albedoMap), Get(samplerLinear), In.uv).rgb;
#endif

	float3 N = normalize(In.normal);

	Out.albedo = float4(albedo, 1);
	Out.normal = float4(N, 0);

	RETURN(Out);
}