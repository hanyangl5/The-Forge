// This file is part of meshoptimizer library and is distributed under the terms of MIT License.
// Copyright (C) 2016-2019, by Arseny Kapoulkine (arseny.kapoulkine@gmail.com)
var MeshoptDecoder = (function() {
  "use strict";
  var wasm = "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";

  var memory = new WebAssembly.Memory({
    initial: 1
  });
  var heap = new Uint8Array(memory.buffer);
  var brk = 32768; // stack top

  var sbrk = function(size) {
    var old = brk;
    brk += size;
    if (brk > heap.length) {
      memory.grow(Math.ceil((brk - heap.length) / 65536));
      heap = new Uint8Array(memory.buffer);
    }
    return old;
  };

  var imports = {
    env: {
      memory: memory,
      _emscripten_memcpy_big: function(d, s, n) {
        heap.set(heap.subarray(s, s + n), d);
      },
    }
  };

  var instance = {};
  var promise =
    fetch('data:application/octet-stream;base64,' + wasm)
    .then(response => response.arrayBuffer())
    .then(bytes => WebAssembly.instantiate(bytes, imports))
    .then(result => instance = result.instance);

  var decode = function(fun, target, count, size, source) {
    var tp = sbrk(count * size);
    var sp = sbrk(source.length);
    heap.set(source, sp);
    var res = fun(tp, count, size, sp, source.length);
    target.set(heap.subarray(tp, tp + count * size), 0);
    sbrk(tp - sbrk(0));
    if (res != 0) throw new Error("Malformed buffer data: " + res);
  };

  return {
    ready: promise,
    decodeVertexBuffer: function(target, count, size, source) {
      decode(instance.exports["_meshopt_decodeVertexBuffer"], target, count, size, source);
    },
    decodeIndexBuffer: function(target, count, size, source) {
      decode(instance.exports["_meshopt_decodeIndexBuffer"], target, count, size, source);
    }
  }
})();

if (typeof exports === 'object' && typeof module === 'object')
  module.exports = MeshoptDecoder;
else if (typeof define === 'function' && define['amd'])
  define([], function() {
    return MeshoptDecoder;
  });
else if (typeof exports === 'object')
  exports["MeshoptDecoder"] = MeshoptDecoder;