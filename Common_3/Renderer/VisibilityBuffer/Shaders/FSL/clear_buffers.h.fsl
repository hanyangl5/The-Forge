/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#ifndef _VB_CLEAR_BUFFERS_H
#define _VB_CLEAR_BUFFERS_H


#include "vb_resources.h.fsl"

void ClearUncompactedDrawArgsBuffer(const uint threadIDx)
{
	UNROLL_N(NUM_CULLING_VIEWPORTS)
	for (uint view = 0; view < NUM_CULLING_VIEWPORTS; ++view)
	{
		Get(uncompactedDrawArgsRW)[GET_UNCOMPACT_DRAW_INDEX(view, threadIDx)].numIndices = 0;
	}
}

void ClearIndirectDrawArgsBuffer()
{
	UNROLL_N(NUM_CULLING_VIEWPORTS)
	for (uint view = 0; view < NUM_CULLING_VIEWPORTS; ++view)
	{
		for(uint geom = 0; geom < NUM_GEOMETRY_SETS; ++geom)
		{
			AtomicStore(Get(indirectDrawArgsBuffer)[GET_INDIRECT_DRAW_ELEM_INDEX(view, geom, DRAW_COUNTER_SLOT_POS)], 0);
		}
		//VB_REPEAT(NUM_GEOMETRY_SETS, CLEAR_BUFFERS)
	}
}

#endif //!_VB_CLEAR_BUFFERS_H